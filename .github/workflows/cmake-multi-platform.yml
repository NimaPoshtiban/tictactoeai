name: CMake on multiple platforms

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [ clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
         
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> $GITHUB_ENV

    - name: Install SBCL on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install -y sbcl

    - name: Install SBCL on Windows
      if: matrix.os == 'windows-latest'
      run: choco install sbcl

    - name: Configure CMake
      run: cmake -B /home/runner/work/tictactoeai/tictactoeai/build -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang -DCMAKE_BUILD_TYPE=Release -S /home/runner/work/tictactoeai/tictactoeai

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}
    - name: Compile SBCL Script
      run: sbcl --eval '(compile-file "minmax.lisp")' --eval '(quit)'
    
